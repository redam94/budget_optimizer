# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/budget_optimizer',
                'doc_host': 'https://optimizer.mattreda.pro',
                'git_url': 'https://github.com/redam94/budget_optimizer',
                'lib_path': 'budget_optimizer'},
  'syms': { 'budget_optimizer.optimizer': { 'budget_optimizer.optimizer.BaseOptimizer': ( 'optimizer.html#baseoptimizer',
                                                                                          'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.BaseOptimizer.__init__': ( 'optimizer.html#baseoptimizer.__init__',
                                                                                                   'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.BaseOptimizer._load_config': ( 'optimizer.html#baseoptimizer._load_config',
                                                                                                       'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.BaseOptimizer._load_loss_fn': ( 'optimizer.html#baseoptimizer._load_loss_fn',
                                                                                                        'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.BaseOptimizer._load_optimizer_array_to_budget': ( 'optimizer.html#baseoptimizer._load_optimizer_array_to_budget',
                                                                                                                          'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.BaseOptimizer._optimizer_fn': ( 'optimizer.html#baseoptimizer._optimizer_fn',
                                                                                                        'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.BaseOptimizer.optimize': ( 'optimizer.html#baseoptimizer.optimize',
                                                                                                   'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.BaseOptimizer.reload_config': ( 'optimizer.html#baseoptimizer.reload_config',
                                                                                                        'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.OptunaBudgetOptimizer': ( 'optimizer.html#optunabudgetoptimizer',
                                                                                                  'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.OptunaBudgetOptimizer.__init__': ( 'optimizer.html#optunabudgetoptimizer.__init__',
                                                                                                           'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.OptunaBudgetOptimizer._opt_fn': ( 'optimizer.html#optunabudgetoptimizer._opt_fn',
                                                                                                          'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.OptunaBudgetOptimizer.optimize': ( 'optimizer.html#optunabudgetoptimizer.optimize',
                                                                                                           'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.ScipyBudgetOptimizer': ( 'optimizer.html#scipybudgetoptimizer',
                                                                                                 'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.ScipyBudgetOptimizer.optimize': ( 'optimizer.html#scipybudgetoptimizer.optimize',
                                                                                                          'budget_optimizer/optimizer.py')},
            'budget_optimizer.utils.model_classes': { 'budget_optimizer.utils.model_classes.BaseBudgetModel': ( 'utils/model_classes.html#basebudgetmodel',
                                                                                                                'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel.__init__': ( 'utils/model_classes.html#basebudgetmodel.__init__',
                                                                                                                         'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel._get_budget_to_data': ( 'utils/model_classes.html#basebudgetmodel._get_budget_to_data',
                                                                                                                                    'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel._get_model_loader': ( 'utils/model_classes.html#basebudgetmodel._get_model_loader',
                                                                                                                                  'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel.contributions': ( 'utils/model_classes.html#basebudgetmodel.contributions',
                                                                                                                              'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel.predict': ( 'utils/model_classes.html#basebudgetmodel.predict',
                                                                                                                        'budget_optimizer/utils/model_classes.py')},
            'budget_optimizer.utils.model_helpers': { 'budget_optimizer.utils.model_helpers.AbstractModel': ( 'utils/model_helpers.html#abstractmodel',
                                                                                                              'budget_optimizer/utils/model_helpers.py'),
                                                      'budget_optimizer.utils.model_helpers.AbstractModel.__repr__': ( 'utils/model_helpers.html#abstractmodel.__repr__',
                                                                                                                       'budget_optimizer/utils/model_helpers.py'),
                                                      'budget_optimizer.utils.model_helpers.AbstractModel.contributions': ( 'utils/model_helpers.html#abstractmodel.contributions',
                                                                                                                            'budget_optimizer/utils/model_helpers.py'),
                                                      'budget_optimizer.utils.model_helpers.AbstractModel.predict': ( 'utils/model_helpers.html#abstractmodel.predict',
                                                                                                                      'budget_optimizer/utils/model_helpers.py'),
                                                      'budget_optimizer.utils.model_helpers.load_module': ( 'utils/model_helpers.html#load_module',
                                                                                                            'budget_optimizer/utils/model_helpers.py'),
                                                      'budget_optimizer.utils.model_helpers.load_yaml': ( 'utils/model_helpers.html#load_yaml',
                                                                                                          'budget_optimizer/utils/model_helpers.py')},
            'budget_optimizer.utils.search_space_helper': { 'budget_optimizer.utils.search_space_helper.ConstrainedSearchSpace': ( 'utils/search_space_helpers.html#constrainedsearchspace',
                                                                                                                                   'budget_optimizer/utils/search_space_helper.py'),
                                                            'budget_optimizer.utils.search_space_helper.ConstrainedSearchSpace.__call__': ( 'utils/search_space_helpers.html#constrainedsearchspace.__call__',
                                                                                                                                            'budget_optimizer/utils/search_space_helper.py'),
                                                            'budget_optimizer.utils.search_space_helper.ConstrainedSearchSpace.__post_init__': ( 'utils/search_space_helpers.html#constrainedsearchspace.__post_init__',
                                                                                                                                                 'budget_optimizer/utils/search_space_helper.py'),
                                                            'budget_optimizer.utils.search_space_helper.Trial': ( 'utils/search_space_helpers.html#trial',
                                                                                                                  'budget_optimizer/utils/search_space_helper.py'),
                                                            'budget_optimizer.utils.search_space_helper.Trial.suggest_float': ( 'utils/search_space_helpers.html#trial.suggest_float',
                                                                                                                                'budget_optimizer/utils/search_space_helper.py')}}}
