# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/budget_optimizer',
                'doc_host': 'https://optimizer.mattreda.pro',
                'git_url': 'https://github.com/redam94/budget_optimizer',
                'lib_path': 'budget_optimizer'},
  'syms': { 'budget_optimizer.optimizer': { 'budget_optimizer.optimizer.Optimizer': ( 'optimizer.html#optimizer',
                                                                                      'budget_optimizer/optimizer.py'),
                                            'budget_optimizer.optimizer.Optimizer.__init__': ( 'optimizer.html#optimizer.__init__',
                                                                                               'budget_optimizer/optimizer.py')},
            'budget_optimizer.utils.model_classes': { 'budget_optimizer.utils.model_classes.BaseBudgetModel': ( 'utils/model_classes.html#basebudgetmodel',
                                                                                                                'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel.__init__': ( 'utils/model_classes.html#basebudgetmodel.__init__',
                                                                                                                         'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel._get_budget_to_data': ( 'utils/model_classes.html#basebudgetmodel._get_budget_to_data',
                                                                                                                                    'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel._get_model_loader': ( 'utils/model_classes.html#basebudgetmodel._get_model_loader',
                                                                                                                                  'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel.contributions': ( 'utils/model_classes.html#basebudgetmodel.contributions',
                                                                                                                              'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes.BaseBudgetModel.predict': ( 'utils/model_classes.html#basebudgetmodel.predict',
                                                                                                                        'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes._Model': ( 'utils/model_classes.html#_model',
                                                                                                       'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes._Model.__repr__': ( 'utils/model_classes.html#_model.__repr__',
                                                                                                                'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes._Model.contributions': ( 'utils/model_classes.html#_model.contributions',
                                                                                                                     'budget_optimizer/utils/model_classes.py'),
                                                      'budget_optimizer.utils.model_classes._Model.predict': ( 'utils/model_classes.html#_model.predict',
                                                                                                               'budget_optimizer/utils/model_classes.py')}}}
